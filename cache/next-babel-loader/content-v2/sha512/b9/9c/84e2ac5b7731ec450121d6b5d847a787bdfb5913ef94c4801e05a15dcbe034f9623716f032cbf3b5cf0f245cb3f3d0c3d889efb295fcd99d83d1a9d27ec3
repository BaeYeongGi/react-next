{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\next-project\\\\pages\\\\index.js\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\n\nconst ProfileLink = props => {\n  /*\r\n    Link의\r\n    'href'는 실제 이동할 경로\r\n    'as'는 우리 URL에 어떻게 보일지 결정\r\n    */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      href: `/p/[profile]`,\n      as: `/p/${props.profile}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"Go to \", props.profile, \"'s profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nconst Index = props => {\n  console.log(\"인덱스\", props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Friends List \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), props.profiles.map((profile, index) => /*#__PURE__*/_jsxDEV(ProfileLink, {\n        profile: profile\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n\n  Index.getInitialProps = async function () {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await res.json();\n    return {\n      profiles: data.map(profile => profile.name)\n    };\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/next-project/pages/index.js"],"names":["Layout","Link","axios","ProfileLink","props","profile","Index","console","log","profiles","map","index","getInitialProps","res","fetch","data","json","name"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B;AACF;AACA;AACA;AACA;AAEE,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAG,cAAb;AAA4B,MAAA,EAAE,EAAG,MAAKA,KAAK,CAACC,OAAQ,EAApD;AAAA,6BACE;AAAA,6BAAUD,KAAK,CAACC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAdD;;AAgBA,MAAMC,KAAK,GAAGF,KAAK,IAAI;AACrBG,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,KAAnB;AAIA,sBACA;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGIA,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmB,CAACL,OAAD,EAAUM,KAAV,kBACjB,QAAC,WAAD;AAAyB,QAAA,OAAO,EAAEN;AAAlC,SAAkBM,KAAlB;AAAA;AAAA;AAAA;AAAA,cADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADA;;AAaAL,EAAAA,KAAK,CAACM,eAAN,GAAwB,kBAAiB;AACvC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAO;AACLP,MAAAA,QAAQ,EAAEM,IAAI,CAACL,GAAL,CAASL,OAAO,IAAIA,OAAO,CAACY,IAA5B;AADL,KAAP;AAGD,GAPD;AASD,CA3BD;;AA4BA,eAAeX,KAAf","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\n\r\nconst ProfileLink = props => {\r\n  /*\r\n    Link의\r\n    'href'는 실제 이동할 경로\r\n    'as'는 우리 URL에 어떻게 보일지 결정\r\n\r\n  */\r\n  return (\r\n    <>\r\n      <Link href={`/p/[profile]`} as={`/p/${props.profile}`}>        \r\n        <a>Go to {props.profile}'s profile</a>\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Index = props => {\r\n  console.log(\"인덱스\", props)\r\n\r\n  \r\n\r\n  return (\r\n  <>\r\n    <Layout>\r\n      <h1>Friends List </h1>\r\n      {\r\n        props.profiles.map((profile, index) => (\r\n          <ProfileLink key={index} profile={profile} />\r\n        ))\r\n      }\r\n    </Layout>\r\n  </>\r\n  );\r\n\r\n  Index.getInitialProps = async function (){\r\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n    const data = await res.json();\r\n\r\n    return {\r\n      profiles: data.map(profile => profile.name)\r\n    };\r\n  };\r\n\r\n}\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}