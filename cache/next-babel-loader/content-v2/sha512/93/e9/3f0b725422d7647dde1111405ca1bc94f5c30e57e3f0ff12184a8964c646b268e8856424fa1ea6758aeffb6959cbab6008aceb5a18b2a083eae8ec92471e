{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\next-project\\\\pages\\\\index.js\";\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nconst ProfileLink = props => {\n  /*\r\n    Link의\r\n    'href'는 실제 이동할 경로\r\n    'as'는 우리 URL에 어떻게 보일지 결정\r\n    */\n  const linkStyle = {\n    display: 'block'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: `/p/[profile]`,\n      as: `/p/${props.profile}`,\n      style: linkStyle,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"Go to \", props.profile, \"'s profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n\nconst Index = props => {\n  const {\n    0: jsonData,\n    1: setJsonData\n  } = useState([]);\n  const userNameList = 'https://jsonplaceholder.typicode.com/users';\n\n  const getUserName = async () => {\n    return await axios.get(userNameList);\n  };\n\n  useEffect(() => {\n    getUserName().then(result => {\n      console.log('결과', result.data);\n      setJsonData(result.data);\n    }).catch(error => {\n      console.log('실패', error);\n    });\n  }, []);\n  console.log(\"인덱스\", props);\n  console.log(\"넥스트네임\", jsonData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Friends List \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), jsonData.map(data => /*#__PURE__*/_jsxDEV(ProfileLink, {\n        profile: data.name\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/next-project/pages/index.js"],"names":["Layout","Link","axios","React","useEffect","useState","ProfileLink","props","linkStyle","display","profile","Index","jsonData","setJsonData","userNameList","getUserName","get","then","result","console","log","data","catch","error","map","name","id"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B;AACF;AACA;AACA;AACA;AAEE,QAAMC,SAAS,GAAG;AAChBC,IAAAA,OAAO,EAAC;AADQ,GAAlB;AAIA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAG,cAAb;AAA4B,MAAA,EAAE,EAAG,MAAKF,KAAK,CAACG,OAAQ,EAApD;AAAuD,MAAA,KAAK,EAAEF,SAA9D;AAAA,6BACE;AAAA,6BAAUD,KAAK,CAACG,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAGS;AAAA;AAAA;AAAA;AAAA,YAHT;AAAA,kBADF;AAOD,CAlBD;;AAoBA,MAAMC,KAAK,GAAGJ,KAAK,IAAI;AACrB,QAAM;AAAA,OAAEK,QAAF;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMS,YAAY,GAAG,4CAArB;;AAEA,QAAMC,WAAW,GAAG,YAAW;AAC7B,WAAO,MAAMb,KAAK,CAACc,GAAN,CAAUF,YAAV,CAAb;AACD,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,GACVE,IADD,CACOC,MAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,MAAM,CAACG,IAAzB;AACAR,MAAAA,WAAW,CAACK,MAAM,CAACG,IAAR,CAAX;AACD,KAJD,EAKCC,KALD,CAKQC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBG,KAAlB;AACD,KAPD;AAQD,GATQ,EASP,EATO,CAAT;AAUAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBb,KAAnB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,QAArB;AAKA,sBACA;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGIA,QAAQ,CAACY,GAAT,CAAcH,IAAD,iBACX,QAAC,WAAD;AAA2B,QAAA,OAAO,EAAEA,IAAI,CAACI;AAAzC,SAAkBJ,IAAI,CAACK,EAAvB;AAAA;AAAA;AAAA;AAAA,cADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADA;AAeD,CAvCD;;AAwCA,eAAef,KAAf","sourcesContent":["\r\nimport Layout from \"../components/Layout\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileLink = props => {\r\n  /*\r\n    Link의\r\n    'href'는 실제 이동할 경로\r\n    'as'는 우리 URL에 어떻게 보일지 결정\r\n\r\n  */\r\n  const linkStyle = {\r\n    display:'block'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link href={`/p/[profile]`} as={`/p/${props.profile}`} style={linkStyle}>        \r\n        <a>Go to {props.profile}'s profile</a>\r\n      </Link><br/>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Index = props => {\r\n  const [ jsonData, setJsonData ] = useState([]);\r\n  const userNameList = 'https://jsonplaceholder.typicode.com/users';\r\n\r\n  const getUserName = async() => {\r\n    return await axios.get(userNameList)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getUserName()\r\n    .then((result) => {\r\n      console.log('결과', result.data)\r\n      setJsonData(result.data)\r\n    })\r\n    .catch((error) => {\r\n      console.log('실패', error)\r\n    })\r\n  },[])\r\n  console.log(\"인덱스\", props)\r\n  console.log(\"넥스트네임\", jsonData)\r\n\r\n\r\n\r\n\r\n  return (\r\n  <>\r\n    <Layout>\r\n      <h1>Friends List </h1>\r\n      {\r\n        jsonData.map((data) => (\r\n          <ProfileLink key={data.id} profile={data.name}></ProfileLink>\r\n        ))\r\n      }\r\n    </Layout>\r\n  </>\r\n  );\r\n\r\n\r\n\r\n}\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}