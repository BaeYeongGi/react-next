{"ast":null,"code":"import _regeneratorRuntime from \"C:/next-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/next-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\next-project\\\\pages\\\\index.js\",\n    _this = this;\n\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\n\nvar ProfileLink = function ProfileLink(props) {\n  /*\r\n    Link의\r\n    'href'는 실제 이동할 경로\r\n    'as'는 우리 URL에 어떻게 보일지 결정\r\n    */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/p/[profile]\",\n      as: \"/p/\".concat(props.profile),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"Go to \", props.profile, \"'s profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_c = ProfileLink;\n\nvar Index = function Index(props) {\n  console.log(\"인덱스\", props);\n  var userNameList = 'https://jsonplaceholder.typicode.com/users';\n\n  var wow = function wow() {\n    return axios.get(userNameList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Friends List \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, _this), props.profiles.map(function (profile, index) {\n        return /*#__PURE__*/_jsxDEV(ProfileLink, {\n          profile: profile\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n  Index.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://jsonplaceholder.typicode.com/users\");\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              profiles: data.map(function (profile) {\n                return profile.name;\n              })\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n};\n\n_c2 = Index;\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProfileLink\");\n$RefreshReg$(_c2, \"Index\");","map":{"version":3,"sources":["C:/next-project/pages/index.js"],"names":["Layout","Link","axios","ProfileLink","props","profile","Index","console","log","userNameList","wow","get","profiles","map","index","getInitialProps","fetch","res","json","data","name"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B;AACF;AACA;AACA;AACA;AAEE,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,gBAAV;AAA4B,MAAA,EAAE,eAAQA,KAAK,CAACC,OAAd,CAA9B;AAAA,6BACE;AAAA,6BAAUD,KAAK,CAACC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAdD;;KAAMF,W;;AAgBN,IAAMG,KAAK,GAAG,SAARA,KAAQ,CAAAF,KAAK,EAAI;AACrBG,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,KAAnB;AAEA,MAAMK,YAAY,GAAG,4CAArB;;AAEA,MAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,WAAOR,KAAK,CAACS,GAAN,CAAUF,YAAV,CAAP;AACD,GAFD;;AAIA,sBACA;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGIL,KAAK,CAACQ,QAAN,CAAeC,GAAf,CAAmB,UAACR,OAAD,EAAUS,KAAV;AAAA,4BACjB,QAAC,WAAD;AAAyB,UAAA,OAAO,EAAET;AAAlC,WAAkBS,KAAlB;AAAA;AAAA;AAAA;AAAA,iBADiB;AAAA,OAAnB,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADA;AAaAR,EAAAA,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJC,KAAK,CAAC,4CAAD,CADD;;AAAA;AAChBC,YAAAA,GADgB;AAAA;AAAA,mBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,YAAAA,IAFgB;AAAA,6CAIf;AACLP,cAAAA,QAAQ,EAAEO,IAAI,CAACN,GAAL,CAAS,UAAAR,OAAO;AAAA,uBAAIA,OAAO,CAACe,IAAZ;AAAA,eAAhB;AADL,aAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;AASD,CA/BD;;MAAMd,K;AAgCN,eAAeA,KAAf","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport Link from \"next/link\";\r\nimport axios from \"axios\";\r\n\r\nconst ProfileLink = props => {\r\n  /*\r\n    Link의\r\n    'href'는 실제 이동할 경로\r\n    'as'는 우리 URL에 어떻게 보일지 결정\r\n\r\n  */\r\n  return (\r\n    <>\r\n      <Link href={`/p/[profile]`} as={`/p/${props.profile}`}>        \r\n        <a>Go to {props.profile}'s profile</a>\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Index = props => {\r\n  console.log(\"인덱스\", props)\r\n\r\n  const userNameList = 'https://jsonplaceholder.typicode.com/users';\r\n\r\n  const wow = () => {\r\n    return axios.get(userNameList)\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <Layout>\r\n      <h1>Friends List </h1>\r\n      {\r\n        props.profiles.map((profile, index) => (\r\n          <ProfileLink key={index} profile={profile} />\r\n        ))\r\n      }\r\n    </Layout>\r\n  </>\r\n  );\r\n\r\n  Index.getInitialProps = async function (){\r\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n    const data = await res.json();\r\n\r\n    return {\r\n      profiles: data.map(profile => profile.name)\r\n    };\r\n  };\r\n\r\n}\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}